// < 구조 분해 할당 >
// const [dog, cat, duck] = animals;
// const { name, email } = user;
// const { name: username, email: userEmail } = user;
//  => 이런거를 구조분해할당이라고 한다

// 구조 분해 할당 = 배열이나 객체를 분해해서 각각의 값을 개별적인 변수에 담는 표현식이다
// 구조 분해 할당을 사용하면 배열이나 객체를 더 간결하게 다룰 수 있기 때문에 우리가 작성해야하는 코드의 양을 눈에 띄게 줄일 수 있다.

// 이번에는 배열 구조 분해 할당과 객체 구조 분해 할당 => 두가지 알아볼거다
// 그리고 구조분해 할당을 더 유용하게 사용할수 있는 팁

// =======================================================================

// < 객체 구조 분해 할당 >
// 객체 구조 분해 할당도 마찬가지로 우리가 객체를 다룰 때 작성해야 되는 양의 코드를 줄여준다.

const animals = {
  dog: "강아지",
  cat: "고양이",
  duck: "오리",
};
// animals라는 객체에는 강아지, 고양이, 오리를 나타내는 key(=> dog) 와 값(=> 강아지)을 가지고 있다.
// 이 각각의 값들을 변수로 빼올 때 보통 이렇게 한다.

// const dog = animals.dog;
// // dog 변수에 강아지를 가져오기 위해서 animals 객체 안에 있는 dog 이런식으로 .을 사용해서 접근을 하곤 한다.
// const cat = animals.cat;
// const duck = animals.duck;

// ------------------------------------------------

// 👇 구조 분해 할당을 사용
// .점을 사용해서 하나하나 따로 변수에 할당해 주지 않아도 된다.
// const { dog, cat, duck } = animals;
// 새로운 변수들을 만들고 싶은거니까 const 다음에 중괄호{}를 작성하면된다.
// 그러고 나서 그 중괄호{}안에 객체 안에 있는 키와 같은 이름의 변수를 넣어주면 된다.
// = animals 해주면된다.

// console.log(dog, cat, duck); // 강아지 고양이 오리

// => 객체 구조 분해 할당은 배열과는 다르게 대괄호[]가 아닌 중괄호{}를 사용한다
// => 변수들의 이름은 객체 안에 있는 key 값과 동일해야한다.
// 이렇게 객체 구조 분해 할당하면 animals객체를 분해해서 dog key에 해당하는 강아지를 dog라는 변수에 넣어주는 개념이다.
// 여기에서 중요한점! => 중괄호{}안에 변수를 넣을 때 변수의 이름을 key값과 동일하게만 해주면 되기 때문에 순서는 상관없다
// const { cat, dog, duck } = animals; 이렇게 해도 작동된다

// ------------------------------------------------

// 👇 만약 객체의 두 번째 요소(고양이)만 변수에 담고 싶을 경우라면
const { dog, cat } = animals;
// 구조 분해 할당할때 중괄호{}안에 dog, cat만 넣으면 된다.
console.log(dog, cat); // 강아지 고양이

// ------------------------------------------------

// // ==========> 배열을 구조 분해 할당에서 사용하는 방법

// ------------------------------------------------

// // < tip.1 > - 변수 값 교환하기
// let a = 1;
// let b = 2;
// // a 값을 b가 가지고 있는 2로 할당해주고, b 값을 a가 갖고 있는 1로 할당해주고 싶다면?

// let temp = a;
// // 먼저 임시 변수를 하나 만들어주고 그 안에 a값을 할당
// // => temp = 1
// a = b;
// // 그러고 나서 a에 b가 가지고 있는 값을 할당해 주면 a는 2가 될거다
// //  => a = 2
// b = temp;
// // 그리고 b에 temp가 가지고 있는 1을 할당 해주면 된다
// // => b = 1
// console.log(a, b); // 2 1
// // 이런 식으로 해주면 a와 b 값을 교환 해 줄 수 있다

// //👇 구조 분해 할당

// let a2 = 1;
// let b2 = 2;

// [a2, b2] = [b2, a2];
// // 대괄호[]를 하나 만들어 주고 그 안에 a와 b를 넣어준다 => 그러고 나서 또 대괄호[]를 사용해서 그 안에 b와 a를 넣어준다
// console.log(a2, b2); // 2 1
// // => 그러고 a와 b를 출력해보면 a와 b의 값이 서로 교환되어서 a는 2, b는 1이 되는걸 볼 수 있다

// // < 설명 >
// // [a2, b2] = [b2, a2]; 앞에 let이나 const를 붙여주지 않은 이유는 이미 a와 b라는 변수가 존재 하고 있기 때문이다.
// // [a2, b2] 이 부분이 구조 분해 할당이다.
// // 구조 분해 할당을 사용하면 배열의 첫번째 요소(b2)는 앞에 있는 첫번째 변수(a2)에 할당 되고 배열의 두번째 요소(a2)는 앞에 있는 두번째 변수(b2)에 할당 되기 때문이다.
// // 그래서 a와 b가 서로 값을 교환 할 수 있었던거다.
// // 임시변수 없이 말이다

// ------------------------------------------------
